{"version":3,"sources":["assets/green-02@2x.png","store/configureStore.js","components/authenticatedLink.js","components/navigation.js","components/privateRoute.js","components/home.js","components/dashboard.js","components/products.js","components/orders.js","components/footer.js","components/signInModal.js","components/signUpModal.js","components/addProductModal.js","components/deleteProductModal.js","components/editProductModal.js","components/addOrderModal.js","components/editOrderModal.js","components/deleteOrderModal.js","components/modalWrapper.js","App.js","serviceWorker.js","index.js","reducers/modal.js","reducers/products.js","reducers/orders.js","reducers/user.js","reducers/index.js","reducers/rootReducer.js","store/configureStore.prod.js","actions/index.js","shared/config.js"],"names":["module","exports","require","AuthenticatedLink","props","isAuthenticated","linkHref","linkText","Link","className","href","mapDispatchToProps","signInModal","signUpModal","signOutUser","connect","state","currentUser","user","expand","Toggle","aria-controls","Collapse","id","inline","firstName","variant","onClick","Component","component","rest","render","to","style","backgroundImage","bgImage","backgroundSize","fluid","height","icon","faArrowRight","fetchProducts","fetchOrders","productCount","products","orderCount","orders","useEffect","trend","faLongArrowAltRight","faLongArrowAltUp","faLongArrowAltDown","Math","floor","random","bg","text","border","width","Body","faListOl","size","Footer","textDecoration","faArrowCircleRight","faTags","faChartLine","addProductModal","deleteProductModal","editProductModal","fetchProductCategories","faPlus","map","product","sku","name","price","category","key","faEdit","faTrash","addOrderModal","editOrderModal","deleteOrderModal","sort","a","b","order","orderDate","lineItems","total","totalItems","length","purchaser","purchaserId","shipDate","moment","format","faTimesCircle","placement","overlay","faCheckCircle","config","app","version","closeModal","authenticateUser","currentModal","modal","show","title","buttonText","onHide","centered","Header","closeButton","Title","Group","controlId","Label","Control","type","placeholder","privacyMessage","Text","faAward","as","value","addProduct","categories","useInput","initialValue","useState","setValue","reset","bind","onChange","event","target","bindSku","bindName","bindPrice","categoryId","bindCategory","backdrop","find","toString","deleteProduct","editProduct","updatedProduct","addOrder","bindFirstName","lastName","bindLastName","address1","bindAddress1","address2","bindAddress2","city","bindCity","bindState","zipCode","bindZipCode","quantity1","bindQuantity1","quantity2","bindQuantity2","quantity3","bindQuantity3","Row","Col","md","offset","address","line1","line2","postalCode","push","quantity","unitPurchasePrice","extendedPurchasePrice","shipAddress","billAddress","reduce","acc","cur","toFixed","editOrder","orderId","initialQuantity1","lineItem","initialQuantity2","initialQuantity3","deleteOrder","SIGN_IN_MODAL","SIGN_UP_MODAL","ADD_PRODUCT_MODAL","DELETE_PRODUCT_MODAL","EDIT_PRODUCT_MODAL","ADD_ORDER_MODAL","EDIT_ORDER_MODAL","DELETE_ORDER_MODAL","store","exact","path","Dashboard","Products","Orders","Boolean","window","location","hostname","match","configureStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","initialState","params","productsCopy","slice","updateProduct","deletedProduct","filter","ordersCopy","updateOrder","updatedOrder","deletedOrder","sessionStorage","getItem","tenantId","rootReducer","combineReducers","action","SET_CURRENT_MODAL","CLOSE_MODAL","REQUEST_AUTHENTICATE_USER","RECEIVE_AUTHENTICATE_USER","REQUEST_PRODUCT_CATEGORIES","RECEIVE_PRODUCT_CATEGORIES","REQUEST_ALL_PRODUCTS","RECEIVE_ALL_PRODUCTS","REQUEST_ADD_PRODUCT","RECEIVE_ADD_PRODUCT","productsWithAdd","REQUEST_EDIT_PRODUCT","RECEIVE_EDIT_PRODUCT","productsWithUpdate","REQUEST_DELETE_PRODUCT","RECEIVE_DELETE_PRODUCT","productsWithDelete","REQUEST_ALL_ORDERS","RECEIVE_ALL_ORDERS","REQUEST_ADD_ORDER","RECEIVE_ADD_ORDER","ordersWithAdd","REQUEST_EDIT_ORDER","RECEIVE_EDIT_ORDER","ordersWithUpdate","REQUEST_DELETE_ORDER","RECEIVE_DELETE_ORDER","ordersWithDelete","createStore","applyMiddleware","thunk","receiveUserAuthentication","dispatch","setItem","email","removeItem","url","api","base_url","Axios","get","response","data","error","console","post","addProductFinished","put","editProductFinished","delete","deleteProductFinished","addOrderFinished","editOrderFinished","deleteOrderFinished","process"],"mappings":"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","file":"static/js/main.14ee99dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/green-02@2x.b0d0dcd3.png\";","if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod');\n} else {\n    module.exports = require('./configureStore.dev');\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from 'react-bootstrap/Nav';\n\nconst AuthenticatedLink = (props) => {\n  const {\n    isAuthenticated = false,\n    linkHref,\n    linkText,\n} = props;\n\n  return isAuthenticated ? <Nav.Link className=\"text-success\" href={linkHref}>{linkText}</Nav.Link> : null;\n}\n\nAuthenticatedLink.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    linkHref: PropTypes.string.isRequired,\n    linkText: PropTypes.string.isRequired,\n};\n\nexport default AuthenticatedLink;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  signInModal,\n  signUpModal,\n  signOutUser,\n} from '../actions';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport AuthenticatedLink from './authenticatedLink';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst Navigation = (props) => {\n  const {\n    signInModal,\n    signUpModal,\n    signOutUser,\n    currentUser, } = props;\n\n  return (\n    <Navbar expand=\"lg\">\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link className=\"text-success\" href=\"/\">Home</Nav.Link>\n          <AuthenticatedLink isAuthenticated={currentUser.isAuthenticated} linkHref=\"dashboard\" linkText=\"Dashboard\" />\n          <AuthenticatedLink isAuthenticated={currentUser.isAuthenticated} linkHref=\"products\" linkText=\"Products\" />\n          <AuthenticatedLink isAuthenticated={currentUser.isAuthenticated} linkHref=\"orders\" linkText=\"Orders\" />\n        </Nav>\n        {currentUser.isAuthenticated ? (\n          <Form inline>\n              <span>Welcome back, {currentUser.firstName}!</span>\n              <Button variant=\"link\" onClick={signOutUser}>Sign Out</Button>\n          </Form>\n        ) :\n        <Form inline>\n              <Button variant=\"link\" onClick={signInModal}>Sign In</Button>\n              <Button variant=\"success\" onClick={signUpModal}>Sign Up</Button>\n            </Form>\n        }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nconst mapDispatchToProps = {\n  signInModal,\n  signUpModal,\n  signOutUser,\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.user,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, currentUser, ...rest }) => (\n    <Route { ...rest } render={props => (\n        currentUser.isAuthenticated\n            ? <Component { ...props } />\n            : <Redirect to='/' />\n    )} />\n);\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.user,\n    };\n\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signUpModal } from '../actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport bgImage from '../assets/green-02@2x.png';\n\nfunction Home(props) {\n    const { signUpModal } = props;\n\n    return (\n        <Container style={{ backgroundImage: `url(${bgImage})`, backgroundSize: 'cover' }}>\n            <Container fluid style={{height: '40vh'}}>\n                <Row>\n                    <Col>\n                        <h1 className=\"display-2 text-light\"><strong>SaaS Commerce</strong> </h1>\n                        <p className=\"lead text-light mb-5\">Your SaaS commerce solution</p>\n                        <p>\n                            <Button variant='danger' onClick={signUpModal}>Get Started Now <FontAwesomeIcon icon={faArrowRight}/></Button>\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n        </Container>\n    )\n}\n\nexport default connect(() => ({}), { signUpModal })(Home);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    fetchProducts,\n    fetchOrders,\n } from '../actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faArrowCircleRight,\n    faChartLine,\n    faLongArrowAltRight,\n    faLongArrowAltUp,\n    faLongArrowAltDown,\n    faListOl,\n    faTags,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Dashboard(props) {\n    const { productCount,\n        orderCount,\n        fetchProducts,\n        fetchOrders,\n    } = props;\n    \n    useEffect(() => {\n            fetchProducts();\n    }, [fetchProducts]);\n\n    useEffect(() => {\n        fetchOrders();\n    }, [fetchOrders]);\n\n    //REMOVE ME\n    const trend = [faLongArrowAltRight, faLongArrowAltUp, faLongArrowAltDown][Math.floor(Math.random() * 3)];\n\n    return (\n        <Container>\n            <Row>\n                <h2>Tenant Name</h2>\n            </Row>\n            <Row>\n                <Col>\n                    <Card bg=\"light\" text=\"black\" border=\"success\" style={{ width: '18rem' }}>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <FontAwesomeIcon icon={faListOl} size=\"5x\" />\n                                </Col>\n                                <Col>\n                                    <p>Orders: { orderCount }</p>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                        <Card.Footer bg=\"gray\">\n                            <Row>\n                                <Col>\n                                    <Link style={{ textDecoration: 'none' }} to=\"/orders\">Details <FontAwesomeIcon icon={faArrowCircleRight} /></Link>\n                                </Col>\n                            </Row>\n                        </Card.Footer>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card bg=\"light\" text=\"black\" border=\"success\" style={{ width: '18rem' }}>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <FontAwesomeIcon icon={faTags} size=\"5x\" />\n                                </Col>\n                                <Col>\n                                    <p>Products: { productCount }</p>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                        <Card.Footer bg=\"gray\">\n                            <Row>\n                                <Col>\n                                <Link style={{ textDecoration: 'none' }} to=\"/products\">Details <FontAwesomeIcon icon={faArrowCircleRight} /></Link>\n                                </Col>\n                            </Row>\n                        </Card.Footer>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card bg=\"light\" text=\"black\" border=\"success\" style={{ width: '18rem' }}>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <FontAwesomeIcon icon={faChartLine} size=\"5x\" />\n                                </Col>\n                                <Col>\n                                    <p>Trend: <FontAwesomeIcon icon={trend} /></p>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                        <Card.Footer bg=\"gray\">\n                            <Row>\n                                <Col>\n                                <Link style={{ textDecoration: 'none' }} to=\"/dashboard\">Details <FontAwesomeIcon icon={faArrowCircleRight} /></Link>\n                                </Col>\n                            </Row>\n                        </Card.Footer>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nconst mapDispatchToProps = {\n    fetchProducts,\n    fetchOrders,\n};\n\nconst mapStateToProps = state => {\n    return {\n        productCount: state.products ? state.products.productCount : 0,\n        orderCount: state.orders ? state.orders.orderCount : 0,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    addProductModal,\n    deleteProductModal,\n    editProductModal,\n    fetchProducts,\n    fetchProductCategories,\n} from '../actions';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faEdit,\n    faPlus,\n    faTrash,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Products(props) {\n    const { products,\n        addProductModal,\n        deleteProductModal,\n        editProductModal,\n        fetchProducts,\n        fetchProductCategories,\n    } = props;\n\n    useEffect(() => {\n            fetchProducts();\n    }, [fetchProducts]);\n\n    useEffect(() => {\n        fetchProductCategories();\n    }, [fetchProductCategories]);\n\n    return (\n        <Container>\n            <h2>Products</h2>\n            <Container>\n                <Row className='mb-2'>\n                    <Col>\n                        <Button onClick={addProductModal} variant='success' className=\"float-right\"> Add Product <FontAwesomeIcon icon={faPlus} /></Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>SKU</th>\n                                <th>Product Name</th>\n                                <th>Price</th>\n                                <th>Category</th>\n                                <th className=\"text-center\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                products ?\n                                    products.map((product) => {\n                                        const { id,\n                                            sku,\n                                            name,\n                                            price,\n                                            category,\n                                        } = product;\n                                        return (\n                                            <tr key={id}>\n                                                <td>{sku}</td>\n                                                <td>{name}</td>\n                                                <td>${price}</td>\n                                                <td>{category.name}</td>\n                                                <td className=\"text-center\"><Button variant='secondary' onClick={() => editProductModal(product)}> Edit <FontAwesomeIcon icon={faEdit} /></Button> <Button onClick={() => deleteProductModal(product)} variant='danger'> Del <FontAwesomeIcon icon={faTrash} /></Button></td>\n                                            </tr>\n                                        );\n                                    }\n                                    )\n                                    :\n                                    null\n                            }\n                        </tbody>\n                    </Table>\n                </Row>\n            </Container>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.products.products,\n    };\n};\n\nconst mapDispatchToProps = {\n    addProductModal,\n    deleteProductModal,\n    editProductModal,\n    fetchProducts,\n    fetchProductCategories,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    fetchOrders,\n    fetchProducts,\n    addOrderModal,\n    editOrderModal,\n    deleteOrderModal,\n} from '../actions';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faTimesCircle,\n    faCheckCircle,\n    faPlus,\n    faEdit,\n    faTrash,\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction Orders(props) {\n    const {\n        orders,\n        fetchOrders,\n        fetchProducts,\n        addOrderModal,\n        editOrderModal,\n        deleteOrderModal,\n     } = props;\n\n    useEffect(() => {\n        fetchOrders();\n    }, [fetchOrders]);\n\n    useEffect(() => {\n        fetchProducts();\n    }, [fetchProducts]);\n\n    orders.sort((a, b) => b.id - a.id);\n\n    return (\n        <Container>\n            <h2>Orders</h2>\n            <Container>\n                <Row className='mb-2'>\n                    <Col>\n                        <Button onClick={addOrderModal} variant='success' className=\"float-right\"> Add Order <FontAwesomeIcon icon={faPlus} /></Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>Order Number</th>\n                                <th>Order Total</th>\n                                <th>Order Date</th>\n                                <th>Total Items</th>\n                                <th>Purchaser</th>\n                                <th className=\"text-center\">Shipped</th>\n                                <th className=\"text-center\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                orders ?\n                                    orders.map((order) => {\n                                        const { id,\n                                            orderDate,\n                                            lineItems,\n                                            total,\n                                            totalItems = lineItems.length,\n                                            purchaser,\n                                            purchaserId = purchaser.id,\n                                            shipDate,\n                                        } = order;\n\n                                        return (\n                                            <tr key={id}>\n                                                <td>{id}</td>\n                                                <td>${total}</td>\n                                                <td>{moment(orderDate).format('L')}</td>\n                                                <td>{totalItems}</td>\n                                                <td>{purchaserId}</td>\n                                                <td className=\"text-center\">{shipDate === null ? <FontAwesomeIcon className=\"text-danger\" icon={faTimesCircle} /> : <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"tooltip-ship-date\">{shipDate}</Tooltip>}><FontAwesomeIcon className=\"text-success\" icon={faCheckCircle} /></OverlayTrigger>}</td>\n                                                <td className=\"text-center\"><Button variant='secondary' onClick={() => editOrderModal(order)}> Edit <FontAwesomeIcon icon={faEdit} /></Button> <Button onClick={() => deleteOrderModal(order)} variant='danger'> Del <FontAwesomeIcon icon={faTrash} /></Button></td>\n                                            </tr>\n                                        );\n                                    }\n                                    )\n                                    :\n                                    null\n                            }\n                        </tbody>\n                    </Table>\n                </Row>\n            </Container>\n        </Container>\n    )\n}\n\nconst mapDispatchToProps = {\n    fetchOrders,\n    fetchProducts,\n    addOrderModal,\n    editOrderModal,\n    deleteOrderModal,\n};\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.orders.orders,\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n","import React from 'react';\nimport config from '../shared/config';\n\nfunction Footer() {\n    return (\n        <h4>\n            <strong>version {config.app.version}</strong>\n        </h4>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {\n    authenticateUser,\n} from '../actions';\n\nfunction SignInModal(props) {\n    const {\n        show,\n        title = 'Sign In',\n        buttonText = 'Sign In',\n        closeModal,\n        authenticateUser,\n    } = props;\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"signInformEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"signInformPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal} >\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={authenticateUser} >\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapDispatchToProps = {\n  closeModal,\n  authenticateUser,  \n};\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAward } from '@fortawesome/free-solid-svg-icons';\n\nfunction SignUpModal(props) {\n    const {\n        show,\n        title = 'Sign Up',\n        buttonText = 'Sign Up',\n        privacyMessage = 'Your email will never be shared.',\n        closeModal,\n    } = props;\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"signUpformFirstName\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"FirstName\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"signUpformLastName\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"LastName\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"signUpformEmail\">\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"EmailAddress\" />\n                            <Form.Text className=\"text-muted\">\n                                {privacyMessage} <FontAwesomeIcon icon={faAward} />\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"signUpformCompany\">\n                            <Form.Label>Company</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"CompanyName\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"signUpformPlan\">\n                            <Form.Label>Plan</Form.Label>\n                            <Form.Control as=\"select\">\n                                <option key={1} value={1}>Standard Tier</option>\n                                <option key={2} value={2}>Professional Tier</option>\n                                <option key={3} value={3}>Advanced Tier</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={closeModal}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n    };\n}\n\nexport default connect(mapStateToProps, { closeModal })(SignUpModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    closeModal,\n    addProduct,\n} from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nfunction AddProductModal(props) {\n    const {\n        show,\n        title = 'Add Product',\n        buttonText = 'Add Product',\n        categories,\n        addProduct,\n        closeModal,\n    } = props;\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(''),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value)\n                }\n            },\n        };\n    };\n\n    const { value: sku, bind: bindSku } = useInput('');\n    const { value: name, bind: bindName } = useInput('');\n    const { value: price, bind: bindPrice } = useInput('');\n    const { value: categoryId, bind: bindCategory } = useInput('');\n\n    const submitProductAdd = () => {\n        const category = categories.find(category => category.id.toString() === categoryId.toString());\n        const product = {\n            sku,\n            name,\n            price,\n            category,\n        };\n\n        addProduct(product);\n    };\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                backdrop='static'\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"productSKU\">\n                            <Form.Label>SKU</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter SKU\" {...bindSku} />\n                        </Form.Group>\n                        <Form.Group controlId=\"productName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter product name\" {...bindName} />\n                        </Form.Group>\n                        <Form.Group controlId=\"productName\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter product price\" {...bindPrice} />\n                        </Form.Group>\n                        <Form.Group controlId=\"productCategory\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control as=\"select\" {...bindCategory}>\n                                {\n                                    categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)\n                                }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={submitProductAdd}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n        categories: state.products.categories,\n    };\n}\n\nconst mapDispatchToProps = {\n    addProduct,\n    closeModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProductModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeModal, deleteProduct } from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction DeleteProductModal(props) {\n    const {\n        show,\n        title = 'Delete Product',\n        buttonText = 'Delete Product',\n        product,\n        closeModal,\n        deleteProduct,\n    } = props;\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Are you sure you want to delete: <strong>{product.name}</strong>?</h4>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={() => deleteProduct(product)}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapDispatchToProps = {\n    closeModal,\n    deleteProduct,\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n        product: state.modal.product,\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteProductModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    editProduct,\n    closeModal,\n} from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nfunction EditProductModal(props) {\n    const {\n        show,\n        product,\n        categories,\n        title = product ? `Edit ${product.name}` : 'Edit Product',\n        buttonText = 'Edit Product',\n        editProduct,\n        closeModal,\n    } = props;\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(''),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value)\n                }\n            },\n        };\n    };\n\n    const { value: sku, bind: bindSku } = useInput(product.sku);\n    const { value: name, bind: bindName } = useInput(product.name);\n    const { value: price, bind: bindPrice } = useInput(product.price);\n    const { value: categoryId, bind: bindCategory } = useInput(product.category.id);\n\n    const submitProductUpdate = () => {\n        const category = categories.find(category => category.id.toString() === categoryId.toString());\n        const updatedProduct = {\n            id: product.id,\n            sku,\n            name,\n            price,\n            category,\n        };\n\n        editProduct(updatedProduct);\n    };\n    \n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"productSKU\">\n                            <Form.Label>SKU</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter SKU\" value={product.sku} {...bindSku} />\n                        </Form.Group>\n                        <Form.Group controlId=\"productName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter product name\" {...bindName} />\n                        </Form.Group>\n                        <Form.Group controlId=\"productName\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter product price\" {...bindPrice} />\n                        </Form.Group>\n                        <Form.Group controlId=\"productCategory\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control as=\"select\" {...bindCategory}>\n                                {\n                                    categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)\n                                }\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={submitProductUpdate}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n        product: state.modal.product,\n        categories: state.products.categories,\n    };\n}\n\nexport default connect(mapStateToProps, { closeModal, editProduct })(EditProductModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    closeModal,\n    addOrder,\n} from '../actions';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\n\nfunction AddOrderModal(props) {\n    const {\n        show,\n        title = 'Add Order',\n        buttonText = 'Add Order',\n        products,\n        addOrder,\n        closeModal,\n    } = props;\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(''),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value)\n                }\n            },\n        };\n    };\n\n    const { value: firstName, bind: bindFirstName } = useInput('');\n    const { value: lastName, bind: bindLastName } = useInput('');\n    const { value: address1, bind: bindAddress1 } = useInput('');\n    const { value: address2, bind: bindAddress2 } = useInput('');\n    const { value: city, bind: bindCity } = useInput('');\n    const { value: state, bind: bindState } = useInput('');\n    const { value: zipCode, bind: bindZipCode } = useInput('');\n    const { value: quantity1, bind: bindQuantity1 } = useInput('');\n    const { value: quantity2, bind: bindQuantity2 } = useInput('');\n    const { value: quantity3, bind: bindQuantity3 } = useInput('');\n\n    const submitOrderAdd = () => {\n        const address = {\n            line1: address1,\n            line2: address2,\n            city: city,\n            state: state,\n            postalCode: zipCode,\n        };\n        const lineItems = [];\n\n        if(quantity1) {\n            lineItems.push(\n                {\n                    product: {\n                        id: products[0].id,\n                        sku: products[0].sku,\n                        name: products[0].name,\n                        price: products[0].price,\n                        category: {\n                            id: products[0].category.id,\n                            name: products[0].category.name,\n                        }\n                    },\n                    quantity: quantity1,\n                    unitPurchasePrice: products[0].price,\n                    extendedPurchasePrice: products[0].price * quantity1,\n                }\n            );\n        }\n\n        if(quantity2) {\n            lineItems.push(\n                {\n                    product: {\n                        id: products[1].id,\n                        sku: products[1].sku,\n                        name: products[1].name,\n                        price: products[1].price,\n                        category: {\n                            id: products[1].category.id,\n                            name: products[1].category.name,\n                        }\n                    },\n                    quantity: quantity2,\n                    unitPurchasePrice: products[1].price,\n                    extendedPurchasePrice: products[1].price * quantity2,\n                }\n            );\n        }\n\n        if(quantity3) {\n            lineItems.push(\n                {\n                    product: {\n                        id: products[2].id,\n                        sku: products[2].sku,\n                        name: products[2].name,\n                        price: products[2].price,\n                        category: {\n                            id: products[2].category.id,\n                            name: products[2].category.name,\n                        }\n                    },\n                    quantity: quantity3,\n                    unitPurchasePrice: products[2].price,\n                    extendedPurchasePrice: products[2].price * quantity3,\n                }\n            );\n        }\n\n        const order = {\n            orderDate: moment().format('YYYY-MM-DD'),\n            purchaser: {\n                firstName,\n                lastName,\n                id: 1,\n            },\n            shipAddress: address,\n            billAddress: address,\n            lineItems,\n            total: lineItems.reduce((acc, cur) => acc + cur.extendedPurchasePrice, 0).toFixed(2),\n        };\n\n        addOrder(order);\n    };\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                backdrop='static'\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <h4>Purchaser</h4>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"purchaserFirstName\">\n                                <Form.Label>First Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter First Name\" {...bindFirstName} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"purchaserLastName\">\n                                <Form.Label>Last Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Last Name\" {...bindLastName} />\n                            </Form.Group>\n                        </Form.Row>\n                        <h4>Shipping Information</h4>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"shippingAddress1\">\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Address\" {...bindAddress1} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"shippingAddress2\">\n                                <Form.Label>Address 2</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Address 2\" {...bindAddress2} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"shippingAddressCity\">\n                                <Form.Label>City</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter City\" {...bindCity} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"shippingAddressState\">\n                                <Form.Label>State</Form.Label>\n                                <Form.Control as=\"select\" {...bindState}>\n                                    {\n                                        ['CA', 'FL', 'GA', 'NV', 'NY', 'OR', 'TX', 'WA'].map(state => <option key={state} value={state}>{state}</option>)\n                                    }\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"shippingZipCode\">\n                                <Form.Label>Zip Code</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Postal Code\" {...bindZipCode} />\n                            </Form.Group>\n                        </Form.Row>\n                        <h4>Products</h4>\n                            {\n                                products[0] ?\n                                (\n                                    <Form.Row className='mb-2'>\n                                        <Col md={{ offset: 1 }}>\n                                            <Form.Label>{`${products[0].name} (${products[0].sku}):`}</Form.Label>\n                                        </Col>\n                                        <Col>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Quantity\" {...bindQuantity1} />\n                                        </Col>\n                                    </Form.Row>\n                                ) : \n                                    null\n                            }\n                            {\n                                products[1] ?\n                                (\n                                    <Form.Row className='mb-2'>\n                                        <Col md={{ offset: 1 }}>\n                                            <Form.Label>{`${products[1].name} (${products[1].sku}):`}</Form.Label>\n                                        </Col>\n                                        <Col>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Quantity\" {...bindQuantity2} />\n                                        </Col>\n                                    </Form.Row>\n                                ) : \n                                null\n                            }\n                            {\n                                products[2] ?\n                                (\n                                    <Form.Row className='mb-2'>\n                                        <Col md={{ offset: 1 }}>\n                                            <Form.Label>{`${products[2].name} (${products[2].sku}):`}</Form.Label>\n                                        </Col>\n                                        <Col>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Quantity\" {...bindQuantity3} />\n                                        </Col>\n                                    </Form.Row>\n                                ) : \n                                null\n                            }\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={submitOrderAdd}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n        products: state.products.products,\n    };\n}\n\nconst mapDispatchToProps = {\n    addOrder,\n    closeModal,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrderModal);\n           ","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n    editOrder,\n    closeModal,\n} from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nfunction EditProductModal(props) {\n    const {\n        show,\n        order,\n        orderId = order.id,\n        products,\n        title = order ? `Edit Order ${order.id}` : 'Edit Order',\n        buttonText = 'Edit Order',\n        editOrder,\n        closeModal,\n    } = props;\n\n    const useInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n\n        return {\n            value,\n            setValue,\n            reset: () => setValue(''),\n            bind: {\n                value,\n                onChange: event => {\n                    setValue(event.target.value);\n                }\n            },\n        };\n    };\n\n    const initialQuantity1 = order.lineItems.find(lineItem => products[0].id === lineItem.product.id);\n    const initialQuantity2 = order.lineItems.find(lineItem => products[1].id === lineItem.product.id);\n    const initialQuantity3 = order.lineItems.find(lineItem => products[2].id === lineItem.product.id);\n    \n    const { value: firstName, bind: bindFirstName } = useInput(order.purchaser.firstName);\n    const { value: lastName, bind: bindLastName } = useInput(order.purchaser.lastName);\n    const { value: address1, bind: bindAddress1 } = useInput(order.shipAddress.line1);\n    const { value: address2, bind: bindAddress2 } = useInput(order.shipAddress.line2);\n    const { value: city, bind: bindCity } = useInput(order.shipAddress.city);\n    const { value: state, bind: bindState } = useInput(order.shipAddress.state);\n    const { value: zipCode, bind: bindZipCode } = useInput(order.shipAddress.postalCode);\n    const { value: quantity1, bind: bindQuantity1 } = useInput(initialQuantity1 ? initialQuantity1.quantity : '');\n    const { value: quantity2, bind: bindQuantity2 } = useInput(initialQuantity2 ? initialQuantity2.quantity : '');\n    const { value: quantity3, bind: bindQuantity3 } = useInput(initialQuantity3 ? initialQuantity3.quantity : '');\n\n    const submitOrderUpdate = () => {\n        const address = {\n            line1: address1,\n            line2: address2,\n            city: city,\n            state: state,\n            postalCode: zipCode,\n        };\n        const lineItems = [];\n\n        if(quantity1) {\n            lineItems.push(\n                {\n                    product: {\n                        id: products[0].id,\n                        sku: products[0].sku,\n                        name: products[0].name,\n                        price: products[0].price,\n                        category: {\n                            id: products[0].category.id,\n                            name: products[0].category.name,\n                        }\n                    },\n                    quantity: quantity1,\n                    unitPurchasePrice: products[0].price,\n                    extendedPurchasePrice: products[0].price * quantity1,\n                }\n            );\n        }\n\n        if(quantity2) {\n            lineItems.push(\n                {\n                    product: {\n                        id: products[1].id,\n                        sku: products[1].sku,\n                        name: products[1].name,\n                        price: products[1].price,\n                        category: {\n                            id: products[1].category.id,\n                            name: products[1].category.name,\n                        }\n                    },\n                    quantity: quantity2,\n                    unitPurchasePrice: products[1].price,\n                    extendedPurchasePrice: products[1].price * quantity2,\n                }\n            );\n        }\n\n        if(quantity3) {\n            lineItems.push(\n                {\n                    product: {\n                        id: products[2].id,\n                        sku: products[2].sku,\n                        name: products[2].name,\n                        price: products[2].price,\n                        category: {\n                            id: products[2].category.id,\n                            name: products[2].category.name,\n                        }\n                    },\n                    quantity: quantity3,\n                    unitPurchasePrice: products[2].price,\n                    extendedPurchasePrice: products[2].price * quantity3,\n                }\n            );\n        }\n\n        const order = {\n            id: orderId,\n            orderDate: moment().format('L'),\n            purchaser: {\n                firstName,\n                lastName,\n                id: 1,\n            },\n            shipAddress: address,\n            billAddress: address,\n            lineItems,\n            total: lineItems.reduce((acc, cur) => acc + cur.extendedPurchasePrice, 0).toFixed(2),\n        };\n\n        editOrder(order);\n    };\n    \n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <Form>\n                        <h4>Purchaser</h4>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"purchaserFirstName\">\n                                <Form.Label>First Name</Form.Label>\n                                <Form.Control type=\"text\" {...bindFirstName} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"purchaserLastName\">\n                                <Form.Label>Last Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Last Name\" {...bindLastName} />\n                            </Form.Group>\n                        </Form.Row>\n                        <h4>Shipping Information</h4>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"shippingAddress1\">\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Address\" {...bindAddress1} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"shippingAddress2\">\n                                <Form.Label>Address 2</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Address 2\" {...bindAddress2} />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"shippingAddressCity\">\n                                <Form.Label>City</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter City\" {...bindCity} />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"shippingAddressState\">\n                                <Form.Label>State</Form.Label>\n                                <Form.Control as=\"select\" {...bindState}>\n                                    {\n                                        ['CA', 'GA', 'NV', 'NY', 'OR', 'TX', 'FL', 'WA'].map(state => <option key={state} value={state}>{state}</option>)\n                                    }\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"shippingZipCode\">\n                                <Form.Label>Zip Code</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Zip Code\" {...bindZipCode} />\n                            </Form.Group>\n                        </Form.Row>\n                        <h4>Available Products</h4>\n                            {\n                                products[0] ?\n                                (\n                                    <Form.Row className='mb-2'>\n                                        <Col md={{offset: 1}}>\n                                            <Form.Label>{`${products[0].name} (${products[0].sku}):`}</Form.Label>\n                                        </Col>\n                                        <Col>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Quantity\" {...bindQuantity1} />\n                                        </Col>\n                                    </Form.Row>\n                                ) : \n                                    null\n                            }\n                            {\n                                products[1] ?\n                                (\n                                    <Form.Row className='mb-2'>\n                                        <Col md={{offset: 1}}>\n                                            <Form.Label>{`${products[1].name} (${products[1].sku}):`}</Form.Label>\n                                        </Col>\n                                        <Col>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Quantity\" {...bindQuantity2} />\n                                        </Col>\n                                    </Form.Row>\n                                ) : \n                                null\n                            }\n                            {\n                                products[2] ?\n                                (\n                                    <Form.Row>\n                                        <Col md={{offset: 1}}>\n                                            <Form.Label>{`${products[2].name} (${products[2].sku}):`}</Form.Label>\n                                        </Col>\n                                        <Col>\n                                            <Form.Control type=\"text\" placeholder=\"Enter Quantity\" {...bindQuantity3} />\n                                        </Col>\n                                    </Form.Row>\n                                ) : \n                                null\n                            }\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={submitOrderUpdate}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapDispatchToProps = {\n    closeModal,\n    editOrder,\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n        order: state.modal.order,\n        products: state.products.products,\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProductModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    closeModal,\n    deleteOrder,\n } from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction DeleteOrderModal(props) {\n    const {\n        show,\n        title = 'Delete Order',\n        buttonText = 'Delete Order',\n        order,\n        closeModal,\n        deleteOrder,\n    } = props;\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Are you sure you want to delete order: <strong>{order.id}</strong>?</h4>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={() => deleteOrder(order)}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapDispatchToProps = {\n    closeModal,\n    deleteOrder,\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n        order: state.modal.order,\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteOrderModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    SIGN_IN_MODAL,\n    SIGN_UP_MODAL,\n    ADD_PRODUCT_MODAL,\n    DELETE_PRODUCT_MODAL,\n    EDIT_PRODUCT_MODAL,\n    ADD_ORDER_MODAL,\n    EDIT_ORDER_MODAL,\n    DELETE_ORDER_MODAL,\n} from '../actions';\nimport SignInModal from './signInModal';\nimport SignUpModal from './signUpModal';\nimport AddProductModal from './addProductModal';\nimport DeleteProductModal from './deleteProductModal';\nimport EditProductModal from './editProductModal';\nimport AddOrderModal from './addOrderModal';\nimport EditOrderModal from './editOrderModal';\nimport DeleteOrderModal from './deleteOrderModal';\n\nfunction ModalWrapper(props) {\n    switch (props.currentModal) {\n        case SIGN_IN_MODAL:\n            return <SignInModal />\n        case SIGN_UP_MODAL:\n            return <SignUpModal />\n        case ADD_PRODUCT_MODAL:\n            return <AddProductModal />\n        case DELETE_PRODUCT_MODAL:\n            return <DeleteProductModal />\n        case EDIT_PRODUCT_MODAL:\n            return <EditProductModal />\n        case ADD_ORDER_MODAL:\n            return <AddOrderModal />\n        case EDIT_ORDER_MODAL:\n            return <EditOrderModal />\n        case DELETE_ORDER_MODAL:\n            return <DeleteOrderModal />\n        default:\n            return null;\n    }\n}\n \nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n    };\n}\n\nexport default connect(mapStateToProps)(ModalWrapper);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Provider, connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport Navigation from './components/navigation';\nimport PrivateRoute from './components/privateRoute';\nimport Home from './components/home';\nimport Dashboard from './components/dashboard';\nimport Products from './components/products';\nimport Orders from './components/orders';\nimport Footer from './components/footer';\nimport Modal from './components/modalWrapper';\n\nconst App = ({ store, currentUser }) => {\n  const { isAuthenticated } = currentUser;\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Container>\n          <Container>\n            <Navigation />\n          </Container>\n          <Container>\n            <Jumbotron>\n              <Route exact={true} path='/'>\n                 {isAuthenticated ? <Redirect to=\"/dashboard\" /> : <Home /> }\n              </Route>\n              <PrivateRoute path='/dashboard' component={Dashboard} />\n              <PrivateRoute path='/products' component={Products} />\n              <PrivateRoute path='/orders' component={Orders} />\n            </Jumbotron>\n          </Container>\n          <Container>\n            <Footer />\n          </Container>\n        </Container>\n        <Modal />\n      </Router>\n    </Provider>\n  );\n}\n\nconst mapStateToProps = state => ({\n    currentUser: state.user,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nrender(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    SET_CURRENT_MODAL,\n    CLOSE_MODAL,\n    EDIT_PRODUCT_MODAL,\n    DELETE_PRODUCT_MODAL,\n    EDIT_ORDER_MODAL,\n    DELETE_ORDER_MODAL,\n} from '../actions';\n\nconst initialState = {\n    currentModal: null,\n    params: null,\n}\n\nexport const modal = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CURRENT_MODAL:\n            switch(action.currentModal) {\n                case EDIT_PRODUCT_MODAL:\n                    return {\n                        ...state,\n                        currentModal: EDIT_PRODUCT_MODAL,\n                        product: action.product,\n                    };\n                case DELETE_PRODUCT_MODAL:\n                        return {\n                            ...state,\n                            currentModal: DELETE_PRODUCT_MODAL,\n                            product: action.product,\n                        };\n                case EDIT_ORDER_MODAL:\n                    return {\n                        ...state,\n                        currentModal: EDIT_ORDER_MODAL,\n                        order: action.order,\n                    };\n                case DELETE_ORDER_MODAL:\n                    return {\n                        ...state,\n                        currentModal: DELETE_ORDER_MODAL,\n                        order: action.order,\n                    };\n                default: \n                    return {\n                        ...state,\n                        currentModal: action.currentModal,\n                    };\n                }\n        case CLOSE_MODAL: \n            return {\n                ...state,\n                currentModal: null,\n            };\n        default:\n            return state;\n    };    \n};\n","import {\n    REQUEST_ALL_PRODUCTS,\n    RECEIVE_ALL_PRODUCTS,\n    REQUEST_ADD_PRODUCT,\n    RECEIVE_ADD_PRODUCT,\n    REQUEST_EDIT_PRODUCT,\n    RECEIVE_EDIT_PRODUCT,\n    REQUEST_DELETE_PRODUCT,\n    RECEIVE_DELETE_PRODUCT,\n    REQUEST_PRODUCT_CATEGORIES,\n    RECEIVE_PRODUCT_CATEGORIES,\n} from '../actions';\n\nconst initialState = {\n    products: [],\n    productCount: 0,\n    categories: [],\n}\n\nfunction addProduct(products, product) {\n    const productsCopy = products.slice();\n    productsCopy.push(product);\n    \n    return productsCopy;\n}\n\nfunction updateProduct(products, updatedProduct) {\n    const productsCopy = products.slice();\n    return productsCopy.map(product => product.id === updatedProduct.id ?  updatedProduct : product);\n}\n\nfunction deleteProduct(products, deletedProduct) {\n    const productsCopy = products.slice();\n    return productsCopy.filter(product => product.id !== deletedProduct.id);\n}\n\nexport const products = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_PRODUCT_CATEGORIES:\n            return null;\n        case RECEIVE_PRODUCT_CATEGORIES:\n            return {\n                ...state,\n                categories: action.categories,\n            }\n        case REQUEST_ALL_PRODUCTS:\n            return null;\n        case RECEIVE_ALL_PRODUCTS:\n            return {\n                ...state,\n                products: action.products,\n                productCount: action.products.length,\n            }\n        case REQUEST_ADD_PRODUCT:\n                return null;\n        case RECEIVE_ADD_PRODUCT: \n            const productsWithAdd = addProduct(state.products, action.product);\n\n            return {\n                ...state,\n                products: productsWithAdd,\n                productCount: productsWithAdd.length,\n            }\n        case REQUEST_EDIT_PRODUCT:\n                return null;\n        case RECEIVE_EDIT_PRODUCT: \n            const productsWithUpdate = updateProduct(state.products, action.product);\n\n            return {\n                ...state,\n                products: productsWithUpdate,\n                productCount: productsWithUpdate.length,\n            }\n        case REQUEST_DELETE_PRODUCT:\n                return null;\n        case RECEIVE_DELETE_PRODUCT: \n            const productsWithDelete = deleteProduct(state.products, action.product);\n\n            return {\n                ...state,\n                products: productsWithDelete,\n                productCount: productsWithDelete.length,\n            }\n        default:\n            return state;\n    }    \n};\n","import {\n    REQUEST_ALL_ORDERS,\n    RECEIVE_ALL_ORDERS,\n    REQUEST_ADD_ORDER,\n    RECEIVE_ADD_ORDER,\n    REQUEST_EDIT_ORDER,\n    RECEIVE_EDIT_ORDER,\n    REQUEST_DELETE_ORDER,\n    RECEIVE_DELETE_ORDER,\n} from '../actions';\n\nconst initialState = {\n    orders: [],\n    orderCount: 0,\n}\n\nfunction addOrder(orders, order) {\n    const ordersCopy = orders.slice();\n    ordersCopy.push(order);\n\n    return ordersCopy;\n}\n\nfunction updateOrder(orders, updatedOrder) {\n    const ordersCopy = orders.slice();\n    return ordersCopy.map(order => order.id === updatedOrder.id ?  updatedOrder : order);\n}\n\nfunction deleteOrder(orders, deletedOrder) {\n    const ordersCopy = orders.slice();\n    return ordersCopy.filter(order => order.id !== deletedOrder.id);\n}\n\nexport const orders = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_ALL_ORDERS:\n            return null;\n        case RECEIVE_ALL_ORDERS:\n            return {\n                ...state,\n                orders: action.orders,\n                orderCount: action.orders.length,\n            }\n        case REQUEST_ADD_ORDER:\n                return null;\n        case RECEIVE_ADD_ORDER: \n            const ordersWithAdd = addOrder(state.orders, action.order);\n\n            return {\n                ...state,\n                orders: ordersWithAdd,\n                orderCount: ordersWithAdd.length,\n            }\n        case REQUEST_EDIT_ORDER:\n                return null;\n        case RECEIVE_EDIT_ORDER: \n            const ordersWithUpdate = updateOrder(state.orders, action.order);\n\n            return {\n                ...state,\n                orders: ordersWithUpdate,\n                orderCount: ordersWithUpdate.length,\n            }\n        case REQUEST_DELETE_ORDER:\n                return null;\n        case RECEIVE_DELETE_ORDER: \n            const ordersWithDelete = deleteOrder(state.orders, action.order);\n\n            return {\n                ...state,\n                orders: ordersWithDelete,\n                orderCount: ordersWithDelete.length,\n            }\n        default:\n            return state;\n    }    \n};\n","import {\n    REQUEST_AUTHENTICATE_USER,\n    RECEIVE_AUTHENTICATE_USER,\n} from '../actions';\n\nconst initialState = {\n    firstName: 'User',\n    lastName: 'Mustermann',\n    isAuthenticated: sessionStorage.getItem('isAuthenticated') === 'true' ? true : false,\n    tenantId: null,\n};\n\nexport const user = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_AUTHENTICATE_USER:\n            return null;\n        case RECEIVE_AUTHENTICATE_USER:\n            return {\n                ...state,\n                ...action.user,\n            }\n        default:\n            return state;\n    };\n};\n","import rootReducer from './rootReducer';\n\nexport default rootReducer;\n","import { combineReducers } from 'redux';\nimport { modal } from './modal';\nimport { products } from './products';\nimport { orders } from './orders';\nimport { user } from './user';\n\nconst rootReducer = combineReducers({\n    modal,\n    user,\n    products,\n    orders,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst configureStore = () => {\n    const store = createStore(\n        rootReducer,\n        applyMiddleware(thunk)\n    )\n    \n    return store;\n}\n\nexport default configureStore;\n","import Axios from 'axios';\nimport config from '../shared/config';\n\nexport const SET_CURRENT_MODAL = 'SET_CURRENT_MODAL';\nexport const SIGN_IN_MODAL = 'SIGN_IN_MODAL';\nexport const SIGN_UP_MODAL = 'SIGN_UP_MODAL';\nexport const ADD_PRODUCT_MODAL = 'ADD_PRODUCT_MODAL';\nexport const EDIT_PRODUCT_MODAL = 'EDIT_PRODUCT_MODAL';\nexport const DELETE_PRODUCT_MODAL = 'DELETE_PRODUCT_MODAL';\nexport const ADD_ORDER_MODAL = 'ADD_ORDER_MODAL';\nexport const EDIT_ORDER_MODAL = 'EDIT_ORDER_MODAL';\nexport const DELETE_ORDER_MODAL = 'DELETE_ORDER_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const REQUEST_ALL_PRODUCTS = 'REQUEST_ALL_PRODUCTS';\nexport const RECEIVE_ALL_PRODUCTS = 'RECEIVE_ALL_PRODUCTS';\nexport const REQUEST_ALL_ORDERS = 'REQUEST_ALL_ORDERS';\nexport const RECEIVE_ALL_ORDERS = 'RECEIVE_ALL_ORDERS';\nexport const REQUEST_PRODUCT_CATEGORIES = 'REQUEST_PRODUCT_CATEGORIES';\nexport const RECEIVE_PRODUCT_CATEGORIES = 'RECEIVE_PRODUCT_CATEGORIES';\nexport const REQUEST_ADD_PRODUCT = 'REQUEST_ALL_PRODUCTS';\nexport const RECEIVE_ADD_PRODUCT = 'REQUEST_ADD_PRODUCT';\nexport const REQUEST_DELETE_PRODUCT = 'REQUEST_DELETE_PRODUCT';\nexport const RECEIVE_DELETE_PRODUCT = 'RECEIVE_DELETE_PRODUCT';\nexport const REQUEST_EDIT_PRODUCT = 'REQUEST_DELETE_PRODUCT';\nexport const RECEIVE_EDIT_PRODUCT = 'RECEIVE_EDIT_PRODUCT';\nexport const REQUEST_ADD_ORDER = 'REQUEST_ALL_ORDER';\nexport const RECEIVE_ADD_ORDER = 'REQUEST_ADD_ORDER';\nexport const REQUEST_DELETE_ORDER = 'REQUEST_DELETE_ORDER';\nexport const RECEIVE_DELETE_ORDER = 'RECEIVE_DELETE_ORDER';\nexport const REQUEST_EDIT_ORDER = 'REQUEST_DELETE_ORDER';\nexport const RECEIVE_EDIT_ORDER = 'RECEIVE_EDIT_ORDER';\nexport const ADD_PRODUCT_SUCCESS = 'REQUEST_ALL_PRODUCTS';\nexport const REQUEST_AUTHENTICATE_USER = 'REQUEST_AUTHENTICATE_USER';\nexport const RECEIVE_AUTHENTICATE_USER = 'RECEIVE_AUTHENTICATE_USER';\n\nexport const signInModal = () => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: SIGN_IN_MODAL,\n    };\n};\n\nexport const signUpModal = () => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: SIGN_UP_MODAL,\n    };\n};\n\nexport const addProductModal = () => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: ADD_PRODUCT_MODAL,\n    };\n};\n\nexport const editProductModal = (product) => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: EDIT_PRODUCT_MODAL,\n        product,\n    };\n};\n\nexport const deleteProductModal = (product) => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: DELETE_PRODUCT_MODAL,\n        product,\n    };\n};\n\nexport const addOrderModal = () => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: ADD_ORDER_MODAL,\n    };\n};\n\nexport const editOrderModal = (order) => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: EDIT_ORDER_MODAL,\n        order,\n    };\n};\n\nexport const deleteOrderModal = (order) => {\n    return {\n        type: SET_CURRENT_MODAL,\n        currentModal: DELETE_ORDER_MODAL,\n        order,\n    };\n};\n\nexport const closeModal = () => {\n    return {\n        type: CLOSE_MODAL,\n    };\n};\n\nexport const requestAllProducts = () => {\n    return {\n        type: REQUEST_ALL_PRODUCTS,\n    };\n};\n\nexport const receiveAllProducts = products => {\n    return {\n        type: RECEIVE_ALL_PRODUCTS,\n        products,\n    };\n};\n\nexport const receiveProductCategories = categories => {\n    return {\n        type: RECEIVE_PRODUCT_CATEGORIES,\n        categories,\n    };\n};\n\nexport const addProductFinished = (product) => {\n    return {\n        type: RECEIVE_ADD_PRODUCT,\n        product,\n    };\n};\n\nexport const editProductFinished = (product) => {\n    return {\n        type: RECEIVE_EDIT_PRODUCT,\n        product,\n    };\n};\n\nexport const deleteProductFinished = (product) => {\n    return {\n        type: RECEIVE_DELETE_PRODUCT,\n        product,\n    };\n};\n\nexport const addOrderFinished = (order) => {\n    return {\n        type: RECEIVE_ADD_ORDER,\n        order,\n    };\n};\n\nexport const editOrderFinished = (order) => {\n    return {\n        type: RECEIVE_EDIT_ORDER,\n        order,\n    };\n};\n\nexport const deleteOrderFinished = (order) => {\n    return {\n        type: RECEIVE_DELETE_ORDER,\n        order,\n    };\n};\n\nexport const receiveUserAuthentication = user => {\n    return {\n        type: RECEIVE_AUTHENTICATE_USER,\n        user,\n    };\n};\n\nexport const receiveAllOrders = orders => {\n    return {\n        type: RECEIVE_ALL_ORDERS,\n        orders,\n    };\n};\n\nexport const authenticateUser = () => {\n    return function(dispatch) {\n        const user = {\n            firstName: 'User',\n            lastName: 'Mustermann',\n            email: 'max@mustermann.com',\n            isAuthenticated: true,\n        }\n            \n        sessionStorage.setItem('isAuthenticated', 'true');\n\n        dispatch(receiveUserAuthentication(user));\n        dispatch(closeModal());\n    };\n};\n\nexport const signOutUser = () => {\n    return function(dispatch) {     \n        sessionStorage.removeItem('isAuthenticated');\n\n        const user = {\n            isAuthenticated: false,\n        };\n\n        dispatch(receiveUserAuthentication(user));\n    };\n};\n\nexport const fetchProducts = () => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/products`;\n    \n        Axios.get(url)\n            .then(response => {\n                dispatch(receiveAllProducts(response.data))\n            }, error => console.error(error));\n    };\n};\n\nexport const fetchProductCategories = () => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/categories`;\n\n        Axios.get(url)\n        .then(response => {\n            dispatch(receiveProductCategories(response.data))\n        }, error => console.error(error));\n    };\n};\n\nexport const addProduct = (product) => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/products`;\n\n        Axios.post(url, product)\n            .then((response) => {\n                dispatch(addProductFinished(response.data));\n            }, error => console.error(error))\n            .then(() => {\n                dispatch(closeModal());\n            }, error => console.error(error));\n    };\n};\n\nexport const editProduct = (product) => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/products/${product.id}`;\n\n        Axios.put(url, product)\n            .then(() => {\n                dispatch(editProductFinished(product));\n            }, error => console.error(error))\n            .then(() => {\n                dispatch(closeModal());\n            }, error => console.error(error));\n    }\n};\n\nexport const deleteProduct = (product) => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/products/${product.id}`;\n\n        Axios.delete(url, product)\n            .then(() => {\n                dispatch(deleteProductFinished(product));\n            }, error => console.error(error))\n            .then(() => {\n                dispatch(closeModal());\n            }, error => console.error(error));\n    };\n};\n\nexport const fetchOrders = () => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/orders`;\n    \n        Axios.get(url)\n            .then(response => {\n                dispatch(receiveAllOrders(response.data))\n            }, error => console.error(error));\n    };\n};\n\nexport const addOrder = (order) => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/orders`;\n\n        Axios.post(url, order)\n            .then((response) => {\n                dispatch(addOrderFinished(response.data));\n            }, error => console.error(error))\n            .then(() => {\n                dispatch(closeModal());\n            }, error => console.error(error));\n    };\n};\n\nexport const editOrder = (order) => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/orders/${order.id}`;\n\n        Axios.put(url, order)\n            .then((response) => {\n                dispatch(editOrderFinished(response.data));\n            }, error => console.error(error))\n            .then(() => {\n                dispatch(closeModal());\n            }, error => console.error(error));\n    }\n};\n\nexport const deleteOrder = (order) => {\n    return function(dispatch) {\n        const url = `${config.api.base_url}/orders/${order.id}`;\n\n        Axios.delete(url, order)\n            .then(() => {\n                dispatch(deleteOrderFinished(order));\n            }, error => console.error(error))\n            .then(() => {\n                dispatch(closeModal());\n            }, error => console.error(error));\n    };\n};\n","const config = {\n    app: {\n        version: process.env.REACT_APP_VERSION,\n    },\n    api: {\n        base_url: process.env.REACT_APP_BASE_URL,\n    },\n}\n\nexport default config;\n"],"sourceRoot":""}