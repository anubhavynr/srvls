{"ast":null,"code":"var _jsxFileName = \"/Users/dgt/projects/saas-factory/bootcamp/srvls/Lab 2/src/components/signUpModal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAward } from '@fortawesome/free-solid-svg-icons';\n\nfunction SignUpModal(props) {\n  const show = props.show,\n        _props$title = props.title,\n        title = _props$title === void 0 ? 'SVRLS Sign Up!' : _props$title,\n        _props$buttonText = props.buttonText,\n        buttonText = _props$buttonText === void 0 ? 'Sign Up' : _props$buttonText,\n        _props$privacyMessage = props.privacyMessage,\n        privacyMessage = _props$privacyMessage === void 0 ? 'Your email will never be shared.' : _props$privacyMessage,\n        closeModal = props.closeModal;\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: show,\n    onHide: closeModal,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, title)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"signUpformEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, privacyMessage, \" \", React.createElement(FontAwesomeIcon, {\n    icon: faAward,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"signUpformPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"success\",\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, buttonText))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentModal: state.modal.currentModal,\n    show: state.modal.currentModal !== null\n  };\n};\n\nexport default connect(mapStateToProps, {\n  closeModal\n})(SignUpModal);","map":{"version":3,"sources":["/Users/dgt/projects/saas-factory/bootcamp/srvls/Lab 2/src/components/signUpModal.js"],"names":["React","connect","closeModal","Modal","Form","Button","FontAwesomeIcon","faAward","SignUpModal","props","show","title","buttonText","privacyMessage","mapStateToProps","state","currentModal","modal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeModal } from '../actions';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAward } from '@fortawesome/free-solid-svg-icons'\n\nfunction SignUpModal(props) {\n    const {\n        show,\n        title = 'SVRLS Sign Up!',\n        buttonText = 'Sign Up',\n        privacyMessage = 'Your email will never be shared.',\n        closeModal,\n    } = props;\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={closeModal}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"signUpformEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                            <Form.Text className=\"text-muted\">\n                                {privacyMessage} <FontAwesomeIcon icon={faAward} />\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"signUpformPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={closeModal}>\n                        {buttonText}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentModal: state.modal.currentModal,\n        show: state.modal.currentModal !== null,\n    };\n}\n\nexport default connect(mapStateToProps, { closeModal })(SignUpModal);\n"]},"metadata":{},"sourceType":"module"}