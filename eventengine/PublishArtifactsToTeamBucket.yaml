AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Stack to prepare the Team Account from Event Engine 
Parameters:
  EEAssetsBucket:
      Description: "Artifacts Bucket"
      Type: String
      Default: "ee-assets-prod-us-east-1"
  EEAssetsKeyPrefix:
      Description: "S3 prefix where assets are stored. Includes the ModuleID and version. eg modules/my_module/v1/"
      Type: String
      Default: "modules/f10ef3b4f001409c893ee7f9decab4c8/v1/"
Resources:
  WorkshopS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub saas-factory-serverless-saas-${AWS::AccountId}
    UpdateReplacePolicy: Retain
  PushArtificatsToTeamBucket:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: PushArtificatsToTeamBucket-Lambda.lambda_handler
      Runtime: python3.7
      CodeUri: 's3://ee-assets-prod-us-east-1/modules/f10ef3b4f001409c893ee7f9decab4c8/v1/PushArtificatsToTeamBucket-Lambda.zip'
      Description: Lambda function to Push the artifacts from event engine bucket to a new bucket in team account0 
      MemorySize: 128
      Timeout: 600
      Policies: 
        - AmazonS3FullAccess  
  InvokeLambda:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt PushArtificatsToTeamBucket.Arn
      SourceBucket: !Ref EEAssetsBucket
      SourcePrefix: !Ref EEAssetsKeyPrefix
      WorkshopS3Bucket: !Ref WorkshopS3Bucket
      Policies: 
        - AmazonS3FullAccess
  Workshop:
    Type: AWS::CloudFormation::Stack
    DependsOn: InvokeLambda
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${WorkshopS3Bucket}/workshop.template
      Parameters:
        WorkshopS3Bucket: !Ref WorkshopS3Bucket